// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("(updated_at)")

  role      Role
  firstName String      @map("first_name")
  lastName  String      @map("last_name")
  email     String
  password  String
  pets      PetToUser[]

  @@map("user")
}

model Pet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("(updated_at)")

  name   String
  owners PetToUser[]
  track  Track[]

  @@map("pet")
}

model PetToUser {
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
  pet    Pet  @relation(fields: [petId], references: [id], onDelete: Cascade)
  petId  Int  @map("pet_id")

  @@id([userId, petId])
  @@map("pet_to_user")
}

enum TrackType {
  MEAL
  MEDICINE
  TREAT
  OTHER
}

model Track {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("(updated_at)")

  label  String
  type   TrackType
  time   String?
  days   String[]
  amount String?

  pet       Pet         @relation(fields: [petId], references: [id], onDelete: Cascade)
  petId     Int         @map("pet_id")
  trackData TrackData[]

  @@map("track")
}

model TrackData {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("(updated_at)")

  track   Track @relation(fields: [trackId], references: [id])
  trackId Int   @map("track_id")

  date DateTime

  @@map("track_data")
}
